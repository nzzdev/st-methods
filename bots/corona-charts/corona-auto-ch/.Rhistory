rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Booster erhalten" = COVID19FirstBoosterPersons) %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Booster erhalten`))
title_vacc_kant <- paste("In", head(vacc_ch_persons_kant$kt, 1), "sind am meisten Menschen geimpft")
vacc_persons_ch <- ch_vacc_persons %>%
filter(geoRegion == "CHFL") %>%
group_by(type) %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
select(-pop, -sumTotal, -date, -geoRegion) %>%
mutate(type = dplyr::recode(type, COVID19FullyVaccPersons = "Doppelt geimpft*",
COVID19PartiallyVaccPersons = "Einmal geimpft",
COVID19FirstBoosterPersons = "Booster erhalten")) %>%
filter(type != "COVID19AtLeastOneDosePersons" &
type != "COVID19NotVaccPersons" &
type != "COVID19VaccSixMonthsPersons" &
type != "COVID19SecondBoosterPersons") %>%
arrange(desc(per100))
title_vacc_ch <- paste0(gsub('\\.', ',', toString(vacc_persons_ch$per100[vacc_persons_ch$type == "Doppelt geimpft*"])), ' Prozent der Schweizer Bevölkerung ist doppelt geimpft')
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Booster erhalten" = COVID19FirstBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`-`Booster erhalten`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Booster erhalten` = round(`Booster erhalten`, 1))  %>%
select(Altersklasse, `Booster erhalten`, `Doppelt geimpft`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
vacc_ch_age_date <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersonsV2) %>%
select(date) %>%
filter(date == max(date)) %>%
mutate(date = as.Date(paste0(str_sub(date,1,4), "-", str_sub(date,5,6),"-", 1), "%Y-%W-%u")+2) %>%
unique() %>%
deframe() %>%
format(format = "%d. %m. %Y")
title <- paste("Rund", round(vacc_ch_age[vacc_ch_age$Altersklasse == "80+",]$`Booster erhalten`), "Prozent der Ältesten sind geboostert")
ch_vacc_speed <- ch_vacc_doses %>%
filter(geoRegion == "CHFL", type == "COVID19VaccDosesAdministered") %>%
mutate(new_vacc_doses = sumTotal-lag(sumTotal, 1, default = 0)) %>%
mutate(new_vacc_doses_7day = (sumTotal-lag(sumTotal,7, default = 0))/7) %>%
mutate(new_vacc_doses_7day = round(new_vacc_doses_7day))
ch_vacc_persons_hist <- ch_vacc_persons %>%
filter(geoRegion == "CHFL") %>%
mutate(per100 = 100*sumTotal/pop) %>%
select(-sumTotal, -geoRegion, -pop) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
rename(Vollständig = COVID19FullyVaccPersons, Teilweise = COVID19PartiallyVaccPersons)
ch_vacc_persons_hist_new <- ch_vacc_persons %>%
filter(geoRegion == "CHFL") %>%
select(-geoRegion, -pop) %>%
spread(type, sumTotal) %>%
mutate(n1 = COVID19AtLeastOneDosePersons-lag(COVID19AtLeastOneDosePersons),
n2 = COVID19FullyVaccPersons-lag(COVID19FullyVaccPersons,1),
n3 = COVID19FirstBoosterPersons-lag(COVID19FirstBoosterPersons,1))%>%
mutate(Erstimpfungen = rollmean(n1, 7, NA, align = "right"),
`Zweitimpfungen*` = rollmean(n2, 7, NA, align = "right"),
`Booster-Impfungen` = rollmean(n3, 7, NA, align = "right"))%>%
select(date, Erstimpfungen, `Zweitimpfungen*`, `Booster-Impfungen`)
ch_vacc_persons_hist_new$`Booster-Impfungen`[ch_vacc_persons_hist_new$`Booster-Impfungen` < 20] <- NA
View(ch_vacc_persons_hist_new)
ch_vacc_date <- last(ch_vacc_persons$date)
ch_vacc_date
ch_vacc_date <- last(ch_vacc_persons$date, '%d. %m. %Y')
ch_vacc_date <- last(ch_vacc_persons$date, '%d. %m %Y')
gsub("\\b0(\\d)\\b", "\\1", format(max(ch_vacc_persons$date), format = "%d. %m. %Y"))
bag_data <- fromJSON('https://www.covid19.admin.ch/api/data/context')
ch_vacc_delrec <- read_csv(bag_data$sources$individual$csv$vaccDosesDelivered) %>%
select(date,geoRegion, pop, type, sumTotal)
ch_vacc_adm <- read_csv(bag_data$sources$individual$csv$vaccDosesAdministered) %>%
select(date,geoRegion, pop, type, sumTotal)
ch_vacc_doses <- rbind(ch_vacc_delrec, ch_vacc_adm)
ch_vacc_persons <- read_csv(bag_data$sources$individual$csv$vaccPersonsV2) %>%
filter(age_group == "total_population") %>%
select(geoRegion, pop, date, type, sumTotal) %>%
drop_na()
ch_inf_vacc <- read_csv(bag_data$sources$individual$csv$daily$casesVaccPersons) %>%
#  filter(vaccine == "all") %>%
mutate(type = "Infektionen")
ch_hosp_vacc <- read_csv(bag_data$sources$individual$csv$daily$hospVaccPersons) %>%
#  filter(vaccine == "all") %>%
mutate(type = "Spitaleintritte")
ch_death_vacc <- read_csv(bag_data$sources$individual$csv$daily$deathVaccPersons) %>%
#  filter(vaccine == "all") %>%
mutate(type = "Todesfälle")
ch_hosp_vacc_age <- read_csv(bag_data$sources$individual$csv$weekly$byAge$hospVaccPersons) %>%
filter(vaccine == "all")
vacc_persons_ch <- ch_vacc_persons %>%
filter(geoRegion == "CHFL") %>%
group_by(type) %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
select(-pop, -sumTotal, -date, -geoRegion) %>%
mutate(type = dplyr::recode(type, COVID19FullyVaccPersons = "Doppelt geimpft*",
COVID19SecondBoosterPersons = "Zweiten Booster erhalten",
COVID19FirstBoosterPersons = "ErstenBooster erhalten")) %>%
filter(type != "COVID19AtLeastOneDosePersons" &
type != "COVID19NotVaccPersons" &
type != "COVID19VaccSixMonthsPersons") %>%
arrange(desc(per100))
View(vacc_persons_ch)
View(vacc_ch_persons_kant)
vacc_persons_ch <- ch_vacc_persons %>%
filter(geoRegion == "CHFL") %>%
group_by(type) %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
select(-pop, -sumTotal, -date, -geoRegion) %>%
mutate(type = dplyr::recode(type, COVID19FullyVaccPersons = "Doppelt geimpft*",
COVID19SecondBoosterPersons = "Zweiten Booster erhalten",
COVID19FirstBoosterPersons = "ErstenBooster erhalten")) %>%
filter(type != "COVID19AtLeastOneDosePersons" &
type != "COVID19NotVaccPersons" &
type != "COVID19VaccSixMonthsPersons" &
type != "COVID19PartiallyVaccPersons") %>%
arrange(desc(per100))
View(vacc_persons_ch)
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`-`Booster erhalten`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Booster erhalten` = round(`Booster erhalten`, 1))  %>%
select(Altersklasse, `Booster erhalten`, `Doppelt geimpft`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`-`Booster erhalten`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Booster erhalten` = round(`Booster erhalten`, 1))  %>%
select(Altersklasse, `Booster erhalten`, `Doppelt geimpft`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`-`Ersten Booster erhalten`-`Zweiten Booster erhalten`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Booster erhalten` = round(`Booster erhalten`, 1))  %>%
select(Altersklasse, `Ersten Booster erhalten`, `Zweiten Booster erhalten`, `Doppelt geimpft`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`-`Ersten Booster erhalten`-`Zweiten Booster erhalten`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Ersten Booster erhalten` = round(`Ersten Booster erhalten`, 1)  %>%
`Zweiten Booster erhalten` = round(`Zweiten Booster erhalten`, 1))  %>%
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`-`Ersten Booster erhalten`-`Zweiten Booster erhalten`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Ersten Booster erhalten` = round(`Ersten Booster erhalten`, 1))
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`-`Ersten Booster erhalten`-`Zweiten Booster erhalten`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Ersten Booster erhalten` = round(`Ersten Booster erhalten`, 1),
`Zweiten Booster erhalten` = round(`Zweiten Booster erhalten`, 1))  %>%
select(Altersklasse, `Ersten Booster erhalten`, `Zweiten Booster erhalten`, `Doppelt geimpft`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
vacc_ch_age_date <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersonsV2) %>%
select(date) %>%
filter(date == max(date)) %>%
mutate(date = as.Date(paste0(str_sub(date,1,4), "-", str_sub(date,5,6),"-", 1), "%Y-%W-%u")+2) %>%
unique() %>%
deframe() %>%
format(format = "%d. %m. %Y")
title <- paste("Rund", round(vacc_ch_age[vacc_ch_age$Altersklasse == "80+",]$`Zweiten Booster erhalten`), "Prozent der Ältesten sind zweimal geboostert")
ch_vacc_persons_hist <- ch_vacc_persons %>%
filter(geoRegion == "CHFL") %>%
mutate(per100 = 100*sumTotal/pop) %>%
select(-sumTotal, -geoRegion, -pop) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
rename(Vollständig = COVID19FullyVaccPersons, Teilweise = COVID19PartiallyVaccPersons)
ch_vacc_persons_hist_new <- ch_vacc_persons %>%
filter(geoRegion == "CHFL") %>%
select(-geoRegion, -pop) %>%
spread(type, sumTotal) %>%
mutate(n1 = COVID19AtLeastOneDosePersons-lag(COVID19AtLeastOneDosePersons),
n2 = COVID19FullyVaccPersons-lag(COVID19FullyVaccPersons,1),
n3 = COVID19FirstBoosterPersons-lag(COVID19FirstBoosterPersons,1),
n4 = COVID19SecondBoosterPersons-lag(COVID19SecondBoosterPersons,1))%>%
mutate(Erstimpfungen = rollmean(n1, 7, NA, align = "right"),
`Zweitimpfungen*` = rollmean(n2, 7, NA, align = "right"),
`Erste Booster-Impfungen` = rollmean(n3, 7, NA, align = "right"),
`Zweite Booster-Impfungen` = rollmean(n4, 7, NA, align = "right"))%>%
select(date, Erstimpfungen, `Zweitimpfungen*`, `Erste Booster-Impfungen`, `Zweite Booster-Impfungen`)
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons-COVID19SecondBoosterPersons) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Booster erhalten`))
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons-COVID19SecondBoosterPersons) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons) %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Ersten Booster erhalten`+`Zweiten Booster erhalten`))
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Ersten Booster erhalten" = COVID19FirstBoosterPersons,
"Zweiten Booster erhalten" = COVID19SecondBoosterPersons)
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons)
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Dreimal geimpft` = round(`Dreimal geimpft`-`Viermal geimpft`, 1))  %>%
select(Altersklasse, `Viermal geimpft`, `Dreimal geimpft`, `Doppelt geimpft`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft` = round(`Doppelt geimpft`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Dreimal geimpft` = round(`Dreimal geimpft`-`Viermal geimpft`, 1))  %>%
select(Altersklasse, `Viermal geimpft`, `Dreimal geimpft`, `Doppelt geimpft`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
View(vacc_ch_age)
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10")
View(vacc_ch_age)
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons, ) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate("Dreimal geimpft" = "Dreimal geimpft" - "Viermal geimpft") %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Dreimal geimpft`+`Viermal geimpft`))
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate("Dreimal geimpft" = "Dreimal geimpft" - "Viermal geimpft") %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Dreimal geimpft`+`Viermal geimpft`))
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons)
View(vacc_ch_persons_kant)
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate(`Dreimal geimpft` = `Dreimal geimpft` - `Viermal geimpft`) %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Dreimal geimpft`+`Viermal geimpft`))
vacc_ch_age <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersons) %>%
filter(geoRegion == 'CHFL', type %in% c("COVID19FullyVaccPersons", "COVID19PartiallyVaccPersons", "COVID19FirstBoosterPersons", "COVID19SecondBoosterPersons")) %>%
filter(date ==last(date), age_group_type == "age_group_AKL10") %>%
select(altersklasse_covid19, per100PersonsTotal,type) %>%
spread(type,per100PersonsTotal) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons) %>%
rename('Altersklasse' = altersklasse_covid19,
"Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einfach geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate(`Doppelt geimpft*` = round(`Doppelt geimpft*`, 1),
`Einfach geimpft` = round(`Einfach geimpft`, 1),
`Dreimal geimpft` = round(`Dreimal geimpft`-`Viermal geimpft`, 1))  %>%
select(Altersklasse, `Viermal geimpft`, `Dreimal geimpft`, `Doppelt geimpft*`, `Einfach geimpft`) %>%
arrange(desc(`Altersklasse`))
vacc_ch_age_date <- read_csv(bag_data$sources$individual$csv$weeklyVacc$byAge$vaccPersonsV2) %>%
select(date) %>%
filter(date == max(date)) %>%
mutate(date = as.Date(paste0(str_sub(date,1,4), "-", str_sub(date,5,6),"-", 1), "%Y-%W-%u")+2) %>%
unique() %>%
deframe() %>%
format(format = "%d. %m. %Y")
title <- paste("Rund", round(vacc_ch_age[vacc_ch_age$Altersklasse == "80+",]$`Viermal geimpft`), "Prozent der Ältesten sind zweimal geboostert")
title
pop <- read_excel('https://dam-api.bfs.admin.ch/hub/api/dam/assets/23484614/master', skiprows = 2)
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
#left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
#select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate(`Dreimal geimpft` = `Dreimal geimpft` - `Viermal geimpft`) %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Dreimal geimpft`+`Viermal geimpft`))
View(vacc_ch_persons_kant)
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk")) %>%
select(-pop, -sumTotal, -geoRegion, -date) %>%
spread(type, per100) %>%
select(-COVID19AtLeastOneDosePersons) %>%
mutate(COVID19FullyVaccPersons = COVID19FullyVaccPersons-COVID19FirstBoosterPersons) %>%
rename("Doppelt geimpft*" = COVID19FullyVaccPersons,
"Einmal geimpft" = COVID19PartiallyVaccPersons,
"Dreimal geimpft" = COVID19FirstBoosterPersons,
"Viermal geimpft" = COVID19SecondBoosterPersons) %>%
mutate(`Dreimal geimpft` = `Dreimal geimpft` - `Viermal geimpft`) %>%
arrange(desc(`Doppelt geimpft*`+`Einmal geimpft`+`Dreimal geimpft`+`Viermal geimpft`))
View(vacc_ch_persons_kant)
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1))
vacc_ch_persons_kant <- ch_vacc_persons %>%
filter(type != 'COVID19VaccSixMonthsPersons') %>%
filter(geoRegion != "FL" & geoRegion != "CHFL"  & geoRegion != "CH") %>%
filter(date == max(date)) %>%
mutate(per100 =round(100*sumTotal/pop,1)) %>%
left_join(pop[,c(1:2)], by = c("geoRegion" = "ktabk"))
library(tidyverse)
library(zoo)
library(countrycode)
library(car)
un <- read_csv("./corona-auto-int/un_pop.csv")
library(countrycode)
library(readr)
pop <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/scripts/input/un/population_latest.csv')
names(pop)[4] <- "pop"
#assign German country names (DE-CH)
pop$Land <- countrycode(pop$entity, 'country.name', 'cldr.short.de_ch')
#assign English short names
pop$cldr.short.en <- countrycode(pop$entity, 'country.name', 'cldr.short.en')
#assign ISO3 codes
pop$iso3c <- countrycode(pop$entity, 'country.name', 'iso3c')
pop$iso3c[pop$iso2c == 'XK'] <- 'XXK'
#manual assignment where necessary
pop$Land[pop$entity == 'Timor'] <- 'Osttimor'
#clean wrong assignment of China
pop$Land[pop$iso_code == 'OWID_WEC'] <- NA
pop$cldr.short.en[pop$iso_code == 'OWID_WEC'] <- NA
pop$iso3c[pop$iso_code == 'OWID_WEC'] <- NA
pop$cldr.short.en[pop$iso_code == 'OWID_WEC'] <- NA
#assign continents and world regions
pop$continent <- countrycode(pop$entity, 'country.name', 'continent')
pop$continent[pop$Land == 'Kosovo'] <- 'Europe'
pop$continent[pop$Land == 'Osttimor'] <- 'Asia'
#clean wrong continents
pop$continent[pop$Land == 'Georgien'] <- 'Europe'
pop$continent[pop$Land == 'Aserbaidschan'] <- 'Europe'
pop$continent[pop$Land == 'Armenien'] <- 'Europe'
pop$un.regionsub.name <- countrycode(pop$entity, 'country.name', 'un.regionsub.name')
pop$region[pop$un.regionsub.name == 'Western Europe'] <- 'Mittel- und Westeuropa'
pop$region[pop$Land == 'GB'] <- 'Mittel- und Westeuropa'
pop$region[pop$Land == 'Isle of Man'] <- 'Mittel- und Westeuropa'
pop$region[pop$Land == 'Irland'] <- 'Mittel- und Westeuropa'
pop$region[pop$un.regionsub.name == 'Northern Europe'] <- 'Nordeuropa'
pop$region[pop$un.regionsub.name == 'Southern Europe'] <- 'Südeuropa'
pop$region[pop$Land == 'Kosovo'] <- 'Südeuropa'
pop$region[pop$Land %in% c('Weissrussland', 'Bulgarien', 'Tschechien', 'Ungarn', 'Republik Moldau', 'Polen', 'Rumänien', 'Russland', 'Slowakei', 'Ukraine',
'Estland', 'Lettland', 'Litauen', 'Slowenien')] <- 'Osteuropa'
pop$region[pop$Land %in% c('GB', 'Irland')] <- 'Mittel- und Westeuropa'
pop$region[pop$un.regionsub.name == 'Northern America'] <- 'Nordamerika'
pop$region[pop$un.regionsub.name == 'Latin America and the Caribbean'] <- 'Lateinamerika'
pop$region[pop$continent == 'Asia'] <- 'Asien'
pop$region[pop$continent == 'Oceania'] <- 'Ozeanien'
pop$region[pop$continent == 'Africa'] <- 'Afrika'
pop$region[pop$Land %in% c('Armenien', 'Aserbaidschan', 'Bahrain', 'Zypern', 'Georgien', 'Iran', 'Irak', 'Israel', 'Jordanien', 'Kuwait', 'Libanon', 'Oman',
'Katar', 'Saudi-Arabien', 'Syrien', 'Türkei', 'Vereinigte Arabische Emirate', 'Palästina', 'Jemen')] <- 'Vorderasien und Naher Osten'
pop$region_2[pop$un.regionsub.name == 'Northern America'] <- 'Nordamerika'
pop$region_2[pop$un.regionsub.name == 'Latin America and the Caribbean'] <- 'Lateinamerika'
pop$region_2[pop$continent == 'Europe'] <- 'Europa'
pop$region_2[pop$continent == 'Asia'] <- 'Asien'
pop$region_2[pop$continent == 'Oceania'] <- 'Ozeanien'
pop$region_2[pop$continent == 'Africa'] <- 'Afrika'
#clean wrong assignment of China
pop$continent[pop$iso_code == 'OWID_WEC'] <- NA
pop$un.regionsub.name[pop$iso_code == 'OWID_WEC'] <- NA
pop$region[pop$iso_code == 'OWID_WEC'] <- NA
pop$region_2[pop$iso_code == 'OWID_WEC'] <- NA
write_csv(pop, "~/NZZ-Mediengruppe/NZZ Visuals - Dokumente/Projekte/_2020/2004 Corona-Grafikartikel/un_pop.csv")
write_csv(pop, "/Users/florianseliger/Documents/GitHub/st-methods/bots/corona-charts/corona-auto-int/un_pop.csv")
