mutate(ravg_deaths = rollmean(new_deaths, 7, fill = 0, align = "right")) %>%
mutate(new_cases = all_cases-lag(all_cases,1)) %>%
mutate(new_cases = case_when(new_cases < 0 ~ 0, is.na(new_cases) ~ 0, TRUE ~ new_cases)) %>%
mutate(ravg_cases = rollmean(new_cases, 7, fill = 0, align = "right")) %>%
left_join(un, by = c("Land"= "Land")) %>%
select(date, continent, region_2, Land, entity, ravg_cases, ravg_deaths, all_cases, dead, pop) %>%
mutate(ravg_cases_pop = ravg_cases/(pop/100000)) %>%
mutate(ravg_deaths_pop = ravg_deaths/(pop/1000000))
#change country names if necessary for matching and displaying
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Vereinigte Arabische Emirate"="VAE"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Saudi-Arabien"="Saudiarabien"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Bosnien und Herzegowina" = "Bosnien-Herz."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Nordmazedonien" = "Nordmazed."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Republik Moldau" = "Moldau"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Trinidad und Tobago" = "Trinidad u. T."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Dominikanische Republik" = "Dominikan. Rep."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Bangladesch" = "Bangladesh"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Zimbabwe" = "Simbabwe"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Kirgisistan" = "Kirgistan"')
continents <- rolling_average_all %>%
select(date, continent, Land, all_cases) %>%
filter(date == last(date)) %>%
group_by(continent) %>%
slice_max(order_by = all_cases, n = 5) %>%
drop_na() %>%
ungroup()
rolling_average_continents <- rolling_average_all  %>%
select(continent, Land, date, ravg_cases_pop) %>%
filter(Land %in% continents$Land & date >= '2020-03-01')
View(rolling_average_all)
deaths_countries <- rolling_average_all %>%
filter(pop > 1000000) %>%
drop_na(ravg_deaths_pop) %>%
arrange(Land, date) %>%
mutate(pct_of_max = (ravg_deaths_pop*100)/max(ravg_deaths_pop, na.rm = T)) %>%
mutate(diff_pct_max = pct_of_max - lag(pct_of_max, 14, default = 0)) %>%
mutate(Tendenz = case_when
(diff_pct_max > 5 ~ '\U2191',
diff_pct_max < -5 ~ '\U2193',
TRUE ~ '\U2192',)) %>%
mutate(ravg_deaths_pop = round(ravg_deaths_pop, 1)) %>%
filter(date == last(date)) %>%
select(Land, ravg_deaths_pop, Tendenz) %>%
arrange(desc(ravg_deaths_pop)) %>%
dplyr::rename(`Neue Todesfälle` = ravg_deaths_pop)
View(deaths_countries)
View(un)
View(deaths_countries)
#prep
rm(list=ls(all=TRUE))
options(scipen=999)
library(tidyverse)
library(zoo)
library(countrycode)
library(car)
# get data from JHU
cases <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
dead <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
cured <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
# get population figures
un <- read_csv("./corona-auto-int/un_pop.csv")
cases$Land <- countrycode(cases$`Country/Region`, 'country.name', 'cldr.short.de_ch')
dead$Land <- countrycode(dead$`Country/Region`, 'country.name', 'cldr.short.de_ch')
cured$Land <- countrycode(cured$`Country/Region`, 'country.name', 'cldr.short.de_ch')
cases$Region <- countrycode(cases$`Province/State`, 'country.name', 'cldr.short.de_ch')
dead$Region <- countrycode(dead$`Province/State`, 'country.name', 'cldr.short.de_ch')
cured$Region <- countrycode(cured$`Province/State`, 'country.name', 'cldr.short.de_ch')
cases$Land[cases$Region == "Macau"] <- "Macau"
cases$Land[cases$Region == "Hongkong"] <- "Hongkong"
dead$Land[dead$Region == "Macau"] <- "Macau"
dead$Land[dead$Region == "Hongkong"] <- "Hongkong"
cured$Land[cured$Region == "Macau"] <- "Macau"
cured$Land[cured$Region == "Hongkong"] <- "Hongkong"
vaccination <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv",
col_types = cols(
total_boosters = col_double(),
total_boosters_per_hundred = col_double()
)) %>%
rename(Land = location,
Iso = iso_code,
Datum = date,
Impfdosen_total = total_vaccinations,
Personen_total = people_vaccinated,
Personen_komplett = people_fully_vaccinated,
Booster = total_boosters,
Impfdosen_daily_raw = daily_vaccinations_raw,
Impfdosen_daily = daily_vaccinations,
Impfdosen_total_100 = total_vaccinations_per_hundred,
"Mind. eine Impfdose, in % der Bev." = people_vaccinated_per_hundred,
"Doppelt geimpft, in % der Bev." = people_fully_vaccinated_per_hundred,
"Booster-Impfungen, in % der Bev." = total_boosters_per_hundred,
"Täglich verabreichte Impfdosen, pro 1000 Einw." = daily_vaccinations_per_million
)
world <- vaccination %>%
filter(Land == "World") %>%
select(Datum, Impfdosen_total)
manufacturer <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations-by-manufacturer.csv")
colnames(manufacturer) <- c("Land", "Datum", "Hersteller", "Anzahl_Impfdosen")
# filter out 'European Union'
manufacturer <- manufacturer %>%
filter(Land != 'European Union')
manufacturer$Land <- countrycode(manufacturer$Land, 'country.name', 'country.name.de')
manufacturer$Land <- recode(manufacturer$Land, '"Vereinigte Staaten"="USA"')
manufacturer$Land <- recode(manufacturer$Land, '"Tschechische Republik"="Tschechien"')
manufacturer <- merge(manufacturer, un, by = "Land", all.x = TRUE)
manufacturer$Land <- recode(manufacturer$Land, '"Vereinigte Arabische Emirate"="VAE"')
manufacturer$Land <- recode(manufacturer$Land, '"Saudi-Arabien"="Saudiarabien"')
manufacturer$Land <- recode(manufacturer$Land, '"Bosnien und Herzegowina" = "Bosnien-Herz."')
manufacturer$Land <- recode(manufacturer$Land, '"Nordmazedonien" = "Nordmazed."')
manufacturer$Land <- recode(manufacturer$Land, '"Republik Moldau" = "Moldau"')
manufacturer$Land <- recode(manufacturer$Land, '"Trinidad und Tobago" = "Trinidad u. T."')
manufacturer$Land <- recode(manufacturer$Land, '"Dominikanische Republik" = "Dominikan. Rep."')
manufacturer$Land <- recode(manufacturer$Land, '"Bangladesch" = "Bangladesh"')
manufacturer$Land <- recode(manufacturer$Land, '"Zimbabwe" = "Simbabwe"')
manufacturer$Land <- recode(manufacturer$Land, '"Kirgisistan" = "Kirgistan"')
hersteller <- manufacturer %>%
filter(pop > 1000000) %>%
group_by(Land, Hersteller) %>%
summarize(Anzahl_Impfdosen = sum(Anzahl_Impfdosen)) %>%
ungroup() %>%
spread(Hersteller, Anzahl_Impfdosen) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
mutate(Summe = Moderna + `Oxford/AstraZeneca` + `Pfizer/BioNTech` + `Johnson&Johnson` + Sinovac + `Sinopharm/Beijing` + `CanSino` + `Sputnik V`) %>%
mutate(Moderna = Moderna/Summe*100,
`Oxford/AstraZeneca` = `Oxford/AstraZeneca`/Summe*100,
`Pfizer/BioNTech` = `Pfizer/BioNTech`/Summe*100,
Sinovac = Sinovac/Summe*100,
`Sinopharm/Beijing` = `Sinopharm/Beijing`/Summe*100,
`Johnson&Johnson` = `Johnson&Johnson`/Summe*100,
`CanSino` = `CanSino`/Summe*100,
`Sputnik V` = `Sputnik V`/Summe*100) %>%
dplyr::rename(
"AstraZeneca" = "Oxford/AstraZeneca",
"Biontech/Pfizer" = "Pfizer/BioNTech",
"Johnson & Johnson" = "Johnson&Johnson"
)
hersteller <- hersteller %>%
select(-Summe)  %>%
relocate(Land, `Biontech/Pfizer`, AstraZeneca, Moderna, `Johnson & Johnson`, CanSino, `Sinopharm/Beijing`, Sinovac)
un <- read_csv('/Users/florianseliger/Documents/GitHub/st-methods/bots/corona-charts/corona-auto-int/un_pop.csv')
manufacturer <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations-by-manufacturer.csv")
colnames(manufacturer) <- c("Land", "Datum", "Hersteller", "Anzahl_Impfdosen")
# filter out 'European Union'
manufacturer <- manufacturer %>%
filter(Land != 'European Union')
manufacturer$Land <- countrycode(manufacturer$Land, 'country.name', 'country.name.de')
manufacturer$Land <- recode(manufacturer$Land, '"Vereinigte Staaten"="USA"')
manufacturer$Land <- recode(manufacturer$Land, '"Tschechische Republik"="Tschechien"')
manufacturer <- merge(manufacturer, un, by = "Land", all.x = TRUE)
manufacturer$Land <- recode(manufacturer$Land, '"Vereinigte Arabische Emirate"="VAE"')
manufacturer$Land <- recode(manufacturer$Land, '"Saudi-Arabien"="Saudiarabien"')
manufacturer$Land <- recode(manufacturer$Land, '"Bosnien und Herzegowina" = "Bosnien-Herz."')
manufacturer$Land <- recode(manufacturer$Land, '"Nordmazedonien" = "Nordmazed."')
manufacturer$Land <- recode(manufacturer$Land, '"Republik Moldau" = "Moldau"')
manufacturer$Land <- recode(manufacturer$Land, '"Trinidad und Tobago" = "Trinidad u. T."')
manufacturer$Land <- recode(manufacturer$Land, '"Dominikanische Republik" = "Dominikan. Rep."')
manufacturer$Land <- recode(manufacturer$Land, '"Bangladesch" = "Bangladesh"')
manufacturer$Land <- recode(manufacturer$Land, '"Zimbabwe" = "Simbabwe"')
manufacturer$Land <- recode(manufacturer$Land, '"Kirgisistan" = "Kirgistan"')
hersteller <- manufacturer %>%
filter(pop > 1000000) %>%
group_by(Land, Hersteller) %>%
summarize(Anzahl_Impfdosen = sum(Anzahl_Impfdosen)) %>%
ungroup() %>%
spread(Hersteller, Anzahl_Impfdosen) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
mutate(Summe = Moderna + `Oxford/AstraZeneca` + `Pfizer/BioNTech` + `Johnson&Johnson` + Sinovac + `Sinopharm/Beijing` + `CanSino` + `Sputnik V`) %>%
mutate(Moderna = Moderna/Summe*100,
`Oxford/AstraZeneca` = `Oxford/AstraZeneca`/Summe*100,
`Pfizer/BioNTech` = `Pfizer/BioNTech`/Summe*100,
Sinovac = Sinovac/Summe*100,
`Sinopharm/Beijing` = `Sinopharm/Beijing`/Summe*100,
`Johnson&Johnson` = `Johnson&Johnson`/Summe*100,
`CanSino` = `CanSino`/Summe*100,
`Sputnik V` = `Sputnik V`/Summe*100) %>%
dplyr::rename(
"AstraZeneca" = "Oxford/AstraZeneca",
"Biontech/Pfizer" = "Pfizer/BioNTech",
"Johnson & Johnson" = "Johnson&Johnson"
)
hersteller <- hersteller %>%
select(-Summe)  %>%
relocate(Land, `Biontech/Pfizer`, AstraZeneca, Moderna, `Johnson & Johnson`, CanSino, `Sinopharm/Beijing`, Sinovac)
View(hersteller)
hersteller <- manufacturer %>%
filter(pop > 1000000) %>%
group_by(Land, Hersteller) %>%
summarize(Anzahl_Impfdosen = sum(Anzahl_Impfdosen)) %>%
ungroup() %>%
spread(Hersteller, Anzahl_Impfdosen) %>%
mutate_all(~replace(., is.na(.), 0))
hersteller <- manufacturer %>%
filter(pop > 1000000) %>%
group_by(Land, Hersteller) %>%
summarize(Anzahl_Impfdosen = sum(Anzahl_Impfdosen)) %>%
ungroup() %>%
spread(Hersteller, Anzahl_Impfdosen) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
mutate(Summe = Moderna + `Oxford/AstraZeneca` + `Pfizer/BioNTech` + `Johnson&Johnson` + Sinovac + `Sinopharm/Beijing` + `CanSino` + `Sputnik V` + `Novavax`) %>%
mutate(Moderna = Moderna/Summe*100,
`Oxford/AstraZeneca` = `Oxford/AstraZeneca`/Summe*100,
`Pfizer/BioNTech` = `Pfizer/BioNTech`/Summe*100,
Sinovac = Sinovac/Summe*100,
`Sinopharm/Beijing` = `Sinopharm/Beijing`/Summe*100,
`Johnson&Johnson` = `Johnson&Johnson`/Summe*100,
`CanSino` = `CanSino`/Summe*100,
`Sputnik V` = `Sputnik V`/Summe*100,
`Novavax` = `Novavax`/Summe*100) %>%
dplyr::rename(
"AstraZeneca" = "Oxford/AstraZeneca",
"Biontech/Pfizer" = "Pfizer/BioNTech",
"Johnson & Johnson" = "Johnson&Johnson"
)
View(hersteller)
hersteller <- hersteller %>%
select(-Summe)  %>%
relocate(Land, `Biontech/Pfizer`, AstraZeneca, Moderna, `Johnson & Johnson`, CanSino, `Sinopharm/Beijing`, Sinovac)
View(hersteller)
rm(list=ls(all=TRUE))
options(scipen=999)
library(tidyverse)
library(zoo)
library(countrycode)
library(car)
# import helper functions
source("./helpers.R")
# get data from JHU
cases <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
dead <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
cured <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
# get population figures
un <- read_csv("./corona-auto-int/un_pop.csv")
tests <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/testing/covid-testing-latest-data-source-details.csv') %>%
separate(col = Entity, into = c("Country", "Entity"), sep = " - ") %>%
select("Country", "Entity", "Date", "7-day smoothed daily change per thousand", "Short-term positive rate", "Short-term tests per case")
tests$Land <- countrycode(tests$Country, 'country.name', 'cldr.short.de_ch')
tests <- merge(tests, un, by = "Land", all.x = TRUE)
tests$Land <- recode(tests$Land, '"Vereinigte Arabische Emirate"="VAE"')
tests$Land <- recode(tests$Land, '"Saudi-Arabien"="Saudiarabien"')
tests$Land <- recode(tests$Land, '"Bosnien und Herzegowina" = "Bosnien-Herz."')
tests$Land <- recode(tests$Land, '"Nordmazedonien" = "Nordmazed."')
tests$Land <- recode(tests$Land, '"Republik Moldau" = "Moldau"')
tests$Land <- recode(tests$Land, '"Trinidad und Tobago" = "Trinidad u. T."')
tests$Land <- recode(tests$Land, '"Dominikanische Republik" = "Dominikan. Rep."')
tests$Land <- recode(tests$Land, '"Bangladesch" = "Bangladesh"')
tests$Land <- recode(tests$Land, '"Zimbabwe" = "Simbabwe"')
tests$Land <- recode(tests$Land, '"Kirgisistan" = "Kirgistan"')
tests$Entity <- factor(tests$Entity, levels = c("tests performed", "people tested", "people tested (incl. non-PCR)", 'units unclear', 'units unclear (incl. non-PCR)',
'samples tested'))
View(tests)
tests <- read_csv('https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/testing/covid-testing-latest-data-source-details.csv')
View(tests)
rm(list=ls(all=TRUE))
options(scipen=999)
library(tidyverse)
library(zoo)
library(countrycode)
library(car)
# import helper functions
source("./helpers.R")
# get data from JHU
cases <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
dead <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv")
cured <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv")
# get population figures
un <- read_csv('/Users/florianseliger/Documents/GitHub/st-methods/bots/corona-charts/corona-auto-int/un_pop.csv')
cases$Land <- countrycode(cases$`Country/Region`, 'country.name', 'cldr.short.de_ch')
dead$Land <- countrycode(dead$`Country/Region`, 'country.name', 'cldr.short.de_ch')
cured$Land <- countrycode(cured$`Country/Region`, 'country.name', 'cldr.short.de_ch')
cases$Region <- countrycode(cases$`Province/State`, 'country.name', 'cldr.short.de_ch')
dead$Region <- countrycode(dead$`Province/State`, 'country.name', 'cldr.short.de_ch')
cured$Region <- countrycode(cured$`Province/State`, 'country.name', 'cldr.short.de_ch')
cases$Land[cases$Region == "Macau"] <- "Macau"
cases$Land[cases$Region == "Hongkong"] <- "Hongkong"
dead$Land[dead$Region == "Macau"] <- "Macau"
dead$Land[dead$Region == "Hongkong"] <- "Hongkong"
cured$Land[cured$Region == "Macau"] <- "Macau"
cured$Land[cured$Region == "Hongkong"] <- "Hongkong"
#to long, get total per date and place
cases_crty <- cases %>%
gather(date, value, 5:(ncol(cases)-2)) %>%
group_by(date, Land) %>%
summarise(first(`Country/Region`), cases = sum(value, na.rm = T))
dead_ctry <- dead %>%
gather(date, value, 5:(ncol(dead)-2)) %>%
group_by(date, Land) %>%
summarise(first(`Country/Region`), dead = sum(value, na.rm = T))
cured_ctry <- cured %>%
gather(date, value, 5:(ncol(cured)-2)) %>%
group_by(date, Land) %>%
summarise(first(`Country/Region`), cured = sum(value, na.rm = T))
#merge
all_ctry <- cbind(as_tibble(dead_ctry), cases_crty$cases)
all_ctry <- left_join(all_ctry, cured_ctry, by = c("date" = "date", "Land" = "Land")) %>%
select(-6)
#adapt for Q date format
all_ctry$date <- as.Date(all_ctry$date, format = "%m/%d/%y")
all_ctry <- arrange(all_ctry, date)
#calc sick, rename
all_ctry$sick <- all_ctry$`cases_crty$cases`-all_ctry$dead-all_ctry$cured
all_ctry <- all_ctry %>%  dplyr::rename(country = 3, all_cases = 5)
#### CORRECTIONS (not beautiful, run it all at once) ####
#spain deaths adjust
cum_spain_deaths <- all_ctry$dead[all_ctry$country == "Spain" & all_ctry$date < "2020-05-25"]
new_spain_deaths <- cum_spain_deaths - lag(cum_spain_deaths,1)
new_spain_deaths[1] <- 0
corr_spain_deaths <- -((new_spain_deaths/28752)*1918)
cum_spain_deaths_check <- cumsum(new_spain_deaths+corr_spain_deaths)
all_ctry$dead[all_ctry$country == "Spain" & all_ctry$date < "2020-05-25"] <- cum_spain_deaths_check
#spain_2 deaths adjust
cum_spain_2_deaths <- all_ctry$dead[all_ctry$country == "Spain" & all_ctry$date < "2020-06-19"]
new_spain_2_deaths <- cum_spain_2_deaths - lag(cum_spain_2_deaths,1)
new_spain_2_deaths[1] <- 0
corr_spain_2_deaths <- ((new_spain_2_deaths/27136)*1179)
cum_spain_2_deaths_check <- cumsum(new_spain_2_deaths+corr_spain_2_deaths)
all_ctry$dead[all_ctry$country == "Spain" & all_ctry$date < "2020-06-19"] <- cum_spain_2_deaths_check
#chile deaths adjust
cum_chile_deaths <- all_ctry$dead[all_ctry$country == "Chile" & all_ctry$date < "2020-07-17"]
new_chile_deaths <- cum_chile_deaths - lag(cum_chile_deaths,1)
new_chile_deaths[1] <- 0
corr_chile_deaths <- ((new_chile_deaths/7290)*1057)
cum_chile_deaths_check <- cumsum(new_chile_deaths+corr_chile_deaths)
all_ctry$dead[all_ctry$country == "Chile" & all_ctry$date < "2020-07-17"] <- cum_chile_deaths_check
#chile_2 deaths adjust
cum_chile_deaths_2 <- all_ctry$dead[all_ctry$country == "Chile" & all_ctry$date < "2022-03-21"]
new_chile_deaths_2 <- cum_chile_deaths_2 - lag(cum_chile_deaths_2,1)
new_chile_deaths_2[1] <- 0
corr_chile_deaths_2 <- ((new_chile_deaths_2/44518)*11447)
cum_chile_deaths_check_2 <- cumsum(new_chile_deaths_2+corr_chile_deaths_2)
all_ctry$dead[all_ctry$country == "Chile" & all_ctry$date < "2022-03-21"] <- cum_chile_deaths_check_2
#peru deaths adjust
cum_peru_deaths <- all_ctry$dead[all_ctry$country == "Peru" & all_ctry$date < "2020-07-23"]
new_peru_deaths <- cum_peru_deaths - lag(cum_peru_deaths,1)
new_peru_deaths[1] <- 0
corr_peru_deaths <- ((new_peru_deaths/13767)*3887)
cum_peru_deaths_check <- cumsum(new_peru_deaths+corr_peru_deaths)
all_ctry$dead[all_ctry$country == "Peru" & all_ctry$date < "2020-07-23"] <- cum_peru_deaths_check
#peru_2 deaths adjust
cum_peru_2_deaths <- all_ctry$dead[all_ctry$country == "Peru" & all_ctry$date < "2020-08-14"]
new_peru_2_deaths <- cum_peru_2_deaths - lag(cum_peru_2_deaths,1)
new_peru_2_deaths[1] <- 0
corr_peru_2_deaths <- ((new_peru_2_deaths/21713)*4143)
cum_peru_2_deaths_check <- cumsum(new_peru_2_deaths+corr_peru_2_deaths)
all_ctry$dead[all_ctry$country == "Peru" & all_ctry$date < "2020-08-14"] <- cum_peru_2_deaths_check
#peru_3 deaths adjust
cum_peru_3_deaths <- all_ctry$dead[all_ctry$country == "Peru" & all_ctry$date < "2021-06-02"]
new_peru_3_deaths <- cum_peru_3_deaths - lag(cum_peru_3_deaths,1)
new_peru_3_deaths[1] <- 0
corr_peru_3_deaths <- ((new_peru_3_deaths/69342)*115600)
cum_peru_3_deaths_check <- cumsum(new_peru_3_deaths+corr_peru_3_deaths)
all_ctry$dead[all_ctry$country == "Peru" & all_ctry$date < "2021-06-02"] <- cum_peru_3_deaths_check
#france cases adjust
cum_fra_cases <- all_ctry$all_cases[all_ctry$country == "France" & all_ctry$date < "2020-04-12"]
new_fra_cases <- cum_fra_cases - lag(cum_fra_cases,1)
new_fra_cases[1] <- 0
corr_fra_cases <- ((new_fra_cases/94863)*26849)
cum_fra_cases_check <- cumsum(new_fra_cases+corr_fra_cases)
all_ctry$all_cases[all_ctry$country == "France" & all_ctry$date < "2020-04-12"] <- cum_fra_cases_check
#india deaths adjust
cum_india_deaths <- all_ctry$dead[all_ctry$country == "India" & all_ctry$date < "2020-06-16"]
new_india_deaths <- cum_india_deaths - lag(cum_india_deaths,1)
new_india_deaths[1] <- 0
corr_india_deaths <- ((new_india_deaths/9900)*2003)
cum_india_deaths_check <- cumsum(new_india_deaths+corr_india_deaths)
all_ctry$dead[all_ctry$country == "India" & all_ctry$date < "2020-06-16"] <- cum_india_deaths_check
#ecuador deaths adjust
cum_ecuador_deaths <- all_ctry$dead[all_ctry$country == "Ecuador" & all_ctry$date < "2020-09-07"]
new_ecuador_deaths <- cum_ecuador_deaths - lag(cum_ecuador_deaths,1)
new_ecuador_deaths[1] <- 0
corr_ecuador_deaths <- ((new_ecuador_deaths/6724)*3852)
cum_ecuador_deaths_check <- cumsum(new_ecuador_deaths+corr_ecuador_deaths)
all_ctry$dead[all_ctry$country == "Ecuador" & all_ctry$date < "2020-09-07"] <- cum_ecuador_deaths_check
#ecuador deaths adjust
cum_ecuador_deaths_2 <- all_ctry$dead[all_ctry$country == "Ecuador" & all_ctry$date < "2021-07-20"]
new_ecuador_deaths_2 <- cum_ecuador_deaths_2 - lag(cum_ecuador_deaths_2,1)
new_ecuador_deaths_2[1] <- 0
corr_ecuador_deaths_2 <- ((new_ecuador_deaths_2/21958)*8839)
cum_ecuador_deaths_2_check <- cumsum(new_ecuador_deaths_2+corr_ecuador_deaths_2)
all_ctry$dead[all_ctry$country == "Ecuador" & all_ctry$date < "2021-07-20"] <- cum_ecuador_deaths_2_check
#bolivia deaths adjust
cum_bolivia_deaths <- all_ctry$dead[all_ctry$country == "Bolivia" & all_ctry$date < "2020-09-07"]
new_bolivia_deaths <- cum_bolivia_deaths - lag(cum_bolivia_deaths,1)
new_bolivia_deaths[1] <- 0
corr_bolivia_deaths <- ((new_bolivia_deaths/5398)*1656)
cum_bolivia_deaths_check <- cumsum(new_bolivia_deaths+corr_bolivia_deaths)
all_ctry$dead[all_ctry$country == "Bolivia" & all_ctry$date < "2020-09-07"] <- cum_bolivia_deaths_check
#ch deaths adjust
cum_ch_deaths <- all_ctry$dead[all_ctry$country == "Switzerland" & all_ctry$date < "2020-10-21"]
new_ch_deaths <- cum_ch_deaths - lag(cum_ch_deaths,1)
new_ch_deaths[1] <- 0
corr_ch_deaths <- -((new_ch_deaths/2145)*106)
cum_ch_deaths_check <- cumsum(new_ch_deaths+corr_ch_deaths)
all_ctry$dead[all_ctry$country == "Switzerland" & all_ctry$date < "2020-10-21"] <- cum_ch_deaths_check
#turkey cases adjust
cum_tur_cases <- all_ctry$all_cases[all_ctry$country == "Turkey" & all_ctry$date < "2020-12-10"]
new_tur_cases <- cum_tur_cases - lag(cum_tur_cases,1)
new_tur_cases[1] <- 0
corr_tur_cases <- ((new_tur_cases/955766)*824907)
cum_tur_cases_check <- cumsum(new_tur_cases+corr_tur_cases)
all_ctry$all_cases[all_ctry$country == "Turkey" & all_ctry$date < "2020-12-10"] <- cum_tur_cases_check
#argentina deaths adjust
cum_arg_deaths <- all_ctry$dead[all_ctry$country == "Argentina" & all_ctry$date < "2020-10-01"]
new_arg_deaths <- cum_arg_deaths - lag(cum_arg_deaths,1)
new_arg_deaths[1] <- 0
corr_arg_deaths <- (new_arg_deaths/16937)*3351
cum_arg_deaths_argeck <- cumsum(new_arg_deaths+corr_arg_deaths)
all_ctry$dead[all_ctry$country == "Argentina" & all_ctry$date < "2020-10-01"] <- cum_arg_deaths_argeck
#nepal deaths adjust
cum_nep_deaths <- all_ctry$dead[all_ctry$country == "Nepal" & all_ctry$date < "2021-02-24"]
new_nep_deaths <- cum_nep_deaths - lag(cum_nep_deaths,1)
new_nep_deaths[1] <- 0
corr_nep_deaths <- (new_nep_deaths/2065)*619
cum_nep_deaths_nepeck <- cumsum(new_nep_deaths+corr_nep_deaths)
all_ctry$dead[all_ctry$country == "Nepal" & all_ctry$date < "2021-02-24"] <- cum_nep_deaths_nepeck
#austria deaths adjust
cum_austria_deaths <- all_ctry$dead[all_ctry$country == "Austria" & all_ctry$date < "2022-04-21"]
new_austria_deaths <- cum_austria_deaths - lag(cum_austria_deaths,1)
new_austria_deaths[1] <- 0
corr_austria_deaths <- ((new_austria_deaths/16470)*587)
cum_austria_deaths_check <- cumsum(new_austria_deaths+corr_austria_deaths)
all_ctry$dead[all_ctry$country == "Austria" & all_ctry$date < "2022-04-21"] <- cum_austria_deaths_check
cum_austria2_deaths <- all_ctry$dead[all_ctry$country == "Austria" & all_ctry$date < "2022-04-22"]
new_austria2_deaths <- cum_austria2_deaths - lag(cum_austria2_deaths,1)
new_austria2_deaths[1] <- 0
corr_austria2_deaths <- ((new_austria2_deaths/17057)*959)
cum_austria2_deaths_check <- cumsum(new_austria2_deaths+corr_austria2_deaths)
all_ctry$dead[all_ctry$country == "Austria" & all_ctry$date < "2022-04-22"] <- cum_austria2_deaths_check
#france deaths adjust
all_ctry$dead[all_ctry$Land == "Frankreich" & all_ctry$date =="2022-02-21"] <- 137596
#us-corr-recovered (they are not included anymore)
all_ctry$sick[all_ctry$country == "US"] <- all_ctry$all_cases[all_ctry$country == "US"]
all_ctry$cured[all_ctry$country == "US"] <- 0
#### 7-day averages ####
rolling_average_all <- all_ctry %>%
group_by(Land, date) %>%
summarise(all_cases = sum(all_cases, na.rm = T), dead = sum(dead, na.rm = T)) %>%
group_by(Land) %>%
mutate(new_deaths = dead-lag(dead,1)) %>%
mutate(new_deaths = case_when(new_deaths < 0 ~ 0, is.na(new_deaths) ~ 0, TRUE ~ new_deaths)) %>%
mutate(ravg_deaths = rollmean(new_deaths, 7, fill = 0, align = "right")) %>%
mutate(new_cases = all_cases-lag(all_cases,1)) %>%
mutate(new_cases = case_when(new_cases < 0 ~ 0, is.na(new_cases) ~ 0, TRUE ~ new_cases)) %>%
mutate(ravg_cases = rollmean(new_cases, 7, fill = 0, align = "right")) %>%
left_join(un, by = c("Land"= "Land")) %>%
select(date, continent, region_2, Land, entity, ravg_cases, ravg_deaths, all_cases, dead, pop) %>%
mutate(ravg_cases_pop = ravg_cases/(pop/100000)) %>%
mutate(ravg_deaths_pop = ravg_deaths/(pop/100000))
#change country names if necessary for matching and displaying
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Vereinigte Arabische Emirate"="VAE"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Saudi-Arabien"="Saudiarabien"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Bosnien und Herzegowina" = "Bosnien-Herz."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Nordmazedonien" = "Nordmazed."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Republik Moldau" = "Moldau"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Trinidad und Tobago" = "Trinidad u. T."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Dominikanische Republik" = "Dominikan. Rep."')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Bangladesch" = "Bangladesh"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Zimbabwe" = "Simbabwe"')
rolling_average_all$Land <- recode(rolling_average_all$Land, '"Kirgisistan" = "Kirgistan"')
continents <- rolling_average_all %>%
select(date, continent, Land, all_cases) %>%
filter(date == last(date)) %>%
group_by(continent) %>%
slice_max(order_by = all_cases, n = 5) %>%
drop_na() %>%
ungroup()
rolling_average_continents <- rolling_average_all  %>%
select(continent, Land, date, ravg_cases_pop) %>%
filter(Land %in% continents$Land & date >= '2020-03-01')
vaccination <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv",
col_types = cols(
total_boosters = col_double(),
total_boosters_per_hundred = col_double()
))
View(vaccination)
all_cum <- rolling_average_all %>%
filter(date == last(all_ctry$date), pop > 1000000) %>%
group_by(Land, pop, date) %>%
summarise(all_cases = sum(all_cases),
dead = sum(dead)) %>%
mutate(all_cases_pop = round(all_cases/(pop/100000), 1))  %>%
mutate(dead_pop = round(dead/(pop/100000),1))
all_cum_cases <- all_cum %>%
arrange(desc(all_cases_pop)) %>%
ungroup() %>%
slice(1:20) %>%
select(Land, all_cases_pop)
cases_countries <- rolling_average_all %>%
filter(pop > 1000000) %>%
drop_na(ravg_cases_pop) %>%
arrange(Land, date) %>%
mutate(pct_of_max = (ravg_cases_pop*100)/max(ravg_cases_pop, na.rm = T)) %>%
mutate(diff_pct_max = pct_of_max - lag(pct_of_max, 14, default = 0)) %>%
mutate(Tendenz = case_when
(diff_pct_max > 5 ~ '\U2191',
diff_pct_max < -5 ~ '\U2193',
TRUE ~ '\U2192',)) %>%
mutate(ravg_cases_pop = round(ravg_cases_pop, 1)) %>%
filter(date == last(date), ravg_cases_pop > 0) %>%
select(Land, ravg_cases_pop, Tendenz) %>%
arrange(desc(ravg_cases_pop)) %>%
dplyr::rename(`Neue Fälle` = ravg_cases_pop)
cases_countries <- rolling_average_all %>%
filter(pop > 1000000) %>%
drop_na(ravg_cases_pop) %>%
arrange(Land, date) %>%
mutate(pct_of_max = (ravg_cases_pop*100)/max(ravg_cases_pop, na.rm = T)) %>%
mutate(diff_pct_max = pct_of_max - lag(pct_of_max, 14, default = 0)) %>%
mutate(Tendenz = case_when
(diff_pct_max > 5 ~ '\U2191',
diff_pct_max < -5 ~ '\U2193',
TRUE ~ '\U2192',))
View(cases_countries)
